{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;ACN2C;;;AAQ5D,MAAM,YAAY;IAGvB,YAAoB,IAAyB;QAAzB,SAAI,GAAJ,IAAI,CAAqB;QAF7C,UAAK,GAAG,aAAa,CAAC;IAItB,CAAC;IAED,QAAQ;QACN,IAAI,GAAG,GAAG,YAAY;QACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC;;wEAVU,YAAY,kEARlB,uEAAmB;0GAQb,YAAY;QCTzB,sEAAK;QACG,gEAAK;QAAA,4DAAK;QAGlB,2EAA+B;;;;;;;;;;;;;;;;;;;;;ACH2B;AACF;AAEA;AACT;;AAcxC,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YALJ;YACP,oEAAa;YACb,iEAAgB;YAChB,kEAAgB;SACjB;mIAIU,SAAS,mBAVlB,wDAAY,aAGZ,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;;;;;;;;;;;;;;;;;ACb2C;;;AAMhD,MAAM,mBAAmB;IAUtC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QATpC,QAAG,GAAG,YAAY;QAElB,YAAO,GAAG;YACR,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,IAAI,6DAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH;IAEuC,CAAC;IAElC,MAAM,CAAC,GAAW;QACvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,GAAG,GAAG,MAAM,EAAE,EAAC,GAAG,EAAE,GAAG,EAAC,EAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACxF,CAAC;;sFAfkB,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAF1B,MAAM;;;;;;;;;;;;;;;ACLpB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/apiend-points.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport APIEndPointsService from './services/apiend-points.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'webscrapper';\n\n  constructor(private auth: APIEndPointsService) {\n\n  }\n\n  ngOnInit() {\n    let url = `/scrapper/`\n    this.auth.setUrl(url).subscribe((data:any) => console.log(data));\n  }\n}\n","<div>\n    <h1>Hello</h1>\n</div>\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport default class APIEndPointsService {\n  api = '/scrapper/'\n\n  options = {\n    withCredentials: true,\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  constructor(private http: HttpClient) { }\n\n  public setUrl(url: string): Observable<any> {\n    console.log('sent')\n    return this.http.post<any>(this.api + 'url/', {url: url},Object.assign(this.options));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}